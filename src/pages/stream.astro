---
---

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Log Stream</title>
</head>
<body class="bg-gray-900 text-gray-300">
    <div class="container mx-auto p-4">
        <h1 class="text-2xl font-bold mb-4">Log Stream</h1>
        <div class="bg-gray-800 rounded-lg px-4 py-2 h-[70vh] overflow-y-auto">
            <pre id="logContent" class="font-mono text-sm whitespace-pre-wrap">
                <div class="my-5 w-full" id="logScrollEnd"></div>
            </pre>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
        const logContent = document.getElementById('logContent')!;
        const logScrollEnd = document.getElementById('logScrollEnd')!;
        let lastId = null;
        
        function connectToEventSource() {
            console.log("connecting to event source")
            const LOGS_URL = `http://localhost:8000/api/projects/sandbox/service-details/docker/nginx-demo/deployments/dpl_dkr_XUAnwUGZobM/logs`
            // const url = lastId ? `${LOGS_URL}?last_id=${lastId}` : LOGS_URL;
            const eventSource = new window.EventSource(LOGS_URL);
            console.log({eventSource})

            eventSource.onopen = (event) => {
                console.log({event})
            }

            eventSource.onmessage = (event) => {
                const logs: Array<{ time: string; content: string, id: string, level: 'INFO'|'ERROR'}> = JSON.parse(event.data);
                
                console.log({
                    logs
                })
                logs.forEach(log => {
                    const logEntry = document.createElement('div');
                    logEntry.innerHTML = `<span class="text-gray-500">[${log.time}]</span> <span class="${log.level === 'INFO' ? "text-white" : "text-red-400"}">${log.content}</span>`;
                    // logContent!.appendChild(logEntry);
                    logContent.insertBefore(logEntry, logScrollEnd)
                })

                // Scroll to the bottom
                // logContent!.scrollTop = logContent!.scrollHeight;
                logScrollEnd.scrollIntoView({
                    behavior: 'smooth'
                })
            };

            eventSource.onerror = (error) => {
                console.error('EventSource failed:', error);
                eventSource.close();
                setTimeout(connectToEventSource, 5000); // Reconnect after 5 seconds
            };
        }

            connectToEventSource()
        })
    </script>
</body>
</html>